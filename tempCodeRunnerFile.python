import pandas as pd

# Function to load data
def load_data(file_path, file_type='csv'):
    if file_type == 'csv':
        df = pd.read_csv(file_path)
    elif file_type == 'excel':
        df = pd.read_excel(file_path)
    elif file_type == 'json':
        df = pd.read_json(file_path)
    else:
        raise ValueError("Unsupported file type. Use 'csv', 'excel', or 'json'.")
    return df

# Function to save data
def save_data(df, file_path, file_type='csv'):
    if file_type == 'csv':
        df.to_csv(file_path, index=False)
    elif file_type == 'excel':
        df.to_excel(file_path, index=False)
    elif file_type == 'json':
        df.to_json(file_path, orient='records', lines=True)
    else:
        raise ValueError("Unsupported file type. Use 'csv', 'excel', or 'json'.")

# Function to display dataset details
def show_dataset_details(df):
    print("Number of rows:", df.shape[0])
    print("Number of columns:", df.shape[1])
    print("First five rows of the dataset:")
    print(df.head())
    print("\nSize of the dataset:", df.size)
    print("Number of missing values in each column:")
    print(df.isnull().sum())
    print("\nSummary statistics for numerical columns:")
    print(df.describe())

# Example usage
if __name__ == "__main__":
    # Load data from a CSV file
    df = load_data('your_dataset.csv', 'csv')
    
    # Display details about the dataset
    show_dataset_details(df)
    
    # Save the dataset to a new file (e.g., in Excel format)
    save_data(df, 'your_dataset_output.xlsx', 'excel')